{"version":3,"sources":["components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/Form/Form.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["Form","onAddContact","prodIdName","uuidv4","prodIdNumber","useState","name","setName","number","setNumber","handleChange","e","target","value","resetForm","className","styles","form","onSubmit","preventDefault","contacts","id","label","htmlFor","input","type","pattern","title","required","onChange","button","ContactList","onDeleteContact","section","list","map","item","onClick","Filter","App","allContacts","JSON","parse","window","localStorage","getItem","setContacts","useEffect","setItem","stringify","useLocalStorage","filter","setFilter","normalizedFilter","toLowerCase","obj","find","contact","alert","prevState","currentTarget","includes","contactId","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.73fadfd3.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from '../Form/Form.module.css';\n\nexport function Form({ onAddContact }) {\n  const prodIdName = uuidv4();\n  const prodIdNumber = uuidv4();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contacts = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n    onAddContact(contacts);\n    resetForm();\n  };\n\n  //очистка формы\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label} htmlFor={prodIdName}>\n        Name\n      </label>\n      <input\n        className={styles.input}\n        id={prodIdName}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChange}\n      />\n      <br />\n      <label className={styles.label} htmlFor={prodIdNumber}>\n        Number\n      </label>\n      <input\n        className={styles.input}\n        id={prodIdNumber}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleChange}\n      />\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  number: PropTypes.number,\n  name: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../ContactList/ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <div className={styles.section}>\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.item} key={id}>\n          <p className={styles.name}> {name}:</p>\n          <p className={styles.number}>{number}</p>\n          <button\n            className={styles.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.any.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../Filter/Filter.module.css';\n\nconst Filter = ({ contacts, onChange }) => (\n  <div>\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        value={contacts}\n        onChange={onChange}\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  contacts: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { useState, useEffect } from 'react';\nimport { Form } from './components/Form/Form';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nfunction App() {\n  const allContacts = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ];\n\n  const useLocalStorage = allContacts => {\n    const [contacts, setContacts] = useState(\n      () => JSON.parse(window.localStorage.getItem('contacts')) ?? allContacts,\n    );\n    useEffect(() => {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }, [contacts]);\n    return [contacts, setContacts];\n  };\n\n  const [contacts, setContacts] = useLocalStorage(allContacts);\n  const [filter, setFilter] = useState('');\n\n  const onAddContact = obj => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === obj.name.toLowerCase(),\n      )\n    ) {\n      alert(`${obj.name} is already in contacts`);\n    } else setContacts(prevState => [obj, ...prevState]);\n  };\n\n  const onDeleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const onChangeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return (\n    <section>\n      <h2>Phonebook</h2>\n      <Form onAddContact={onAddContact} />\n      <h2>Contacts</h2>\n      <Filter contacts={filter} onChange={onChangeFilter} />\n      <ContactList\n        contacts={visibleContacts()}\n        onDeleteContact={onDeleteContact}\n      />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__HivuF\",\"input\":\"Form_input__1i1vO\",\"label\":\"Form_label__1A_4g\",\"button\":\"Form_button__3oWZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2k3Jr\",\"item\":\"ContactList_item__9TFUb\",\"name\":\"ContactList_name__33wqX\",\"number\":\"ContactList_number__T8L55\",\"button\":\"ContactList_button__1MBzm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2aZWT\",\"label\":\"Filter_label__3kwqh\"};"],"sourceRoot":""}